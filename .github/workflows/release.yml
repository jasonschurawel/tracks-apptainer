name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
        default: 'v1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Apptainer
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        cd /tmp
        wget https://github.com/apptainer/apptainer/releases/download/v1.2.5/apptainer_1.2.5_amd64.deb
        sudo apt-get install -y ./apptainer_1.2.5_amd64.deb

    - name: Build using Makefile
      run: |
        # Use existing Makefile build system
        echo "3" | make build  # Build both Docker and Apptainer
        
    - name: Tag and push Docker image
      run: |
        # Tag the locally built image and push to registry
        docker tag tracks-apptainer_web:latest ghcr.io/${{ github.repository }}:latest
        docker tag tracks-apptainer_web:latest ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name || github.event.inputs.tag_name }}
        docker push ghcr.io/${{ github.repository }}:latest
        docker push ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name || github.event.inputs.tag_name }}

    - name: Test container
      run: |
        echo "Testing Apptainer container..."
        apptainer exec tracks_apptainer.sif ls -la /app/
        apptainer exec tracks_apptainer.sif bundle --version
        apptainer exec tracks_apptainer.sif rails --version
        echo "‚úì Container test passed"

    - name: Get container size
      id: size
      run: |
        SIZE=$(du -h tracks_apptainer.sif | cut -f1)
        SIZE_BYTES=$(du -b tracks_apptainer.sif | cut -f1)
        echo "size=$SIZE" >> $GITHUB_OUTPUT
        echo "size_bytes=$SIZE_BYTES" >> $GITHUB_OUTPUT
        echo "Container size: $SIZE ($SIZE_BYTES bytes)"

    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: tracks_apptainer.sif
        body: |
          ## üêã Tracks GTD Apptainer Container Release
          
          ### üì¶ Container Details
          - **Size**: ${{ steps.size.outputs.size }}
          - **Type**: Apptainer/Singularity SIF
          - **Database**: SQLite (embedded)
          - **Admin credentials**: admin/admin
          - **Environment**: Production-ready
          
          ### üöÄ Quick Start
          ```bash
          # Download the container
          wget https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/tracks_apptainer.sif
          
          # Run the application
          apptainer run tracks_apptainer.sif
          
          # Access at http://localhost:3000
          # Login with admin/admin
          ```
          
          ### üñ•Ô∏è HPC & SLURM Usage
          ```bash
          # Submit SLURM job
          sbatch --job-name=tracks --time=4:00:00 --mem=2G \
            --wrap="apptainer run tracks_apptainer.sif"
          
          # Interactive SLURM session
          srun --pty --time=2:00:00 --mem=2G \
            apptainer run tracks_apptainer.sif
          
          # Custom port binding
          apptainer exec tracks_apptainer.sif \
            bundle exec rails server -b 0.0.0.0 -p 8080
          ```
          
          ### ‚ú® Features
          - ‚úÖ **Zero configuration** - runs immediately
          - ‚úÖ **Portable** - copy to any system with Apptainer
          - ‚úÖ **Secure** - runs without root privileges
          - ‚úÖ **HPC-optimized** - perfect for research clusters
          - ‚úÖ **SLURM-ready** - native cluster integration
          - ‚úÖ **Self-contained** - no external dependencies
          
          Perfect for academic environments, research computing, and portable deployments!
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Manual release (workflow_dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "Container built successfully for manual trigger"
        echo "Size: ${{ steps.size.outputs.size }}"
        echo "You can download the artifact from the Actions tab"
        
    - name: Upload as artifact
      uses: actions/upload-artifact@v4
      with:
        name: tracks-apptainer-${{ github.event.release.tag_name || github.event.inputs.tag_name || 'latest' }}
        path: tracks_apptainer.sif
        retention-days: 90
